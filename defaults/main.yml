---
# This is the certificate admins email - make sure to set it to yours!
letsencrypt_email: yourmail@example.com
# The domain we're requesting/renewing for
letsencrypt_domain: example.com
# LetsEncrypt Terms of Service SHA256
#letsencrypt_tos_sha256: "6373439b9f29d67a5cd4d18cbc7f264809342dbf21cb2ba2fc7588df987a6221"
# staging mode to create a fake certificate
letsencrypt_staging: false
# Always request www. also?
letsencrypt_request_www: true
# Print Certbot output
letsencrypt_verbose: true
# Pause these services while updating the certificate
letsencrypt_pause_services: []
# Force Certificate Reneval
letsencrypt_force_renew: true
# Certificate expiration threshold in seconds (default is 30 days - 1/3 of total certificate lifecycle)
letsencrypt_expiration_threshold: "{{ (90 * 24 * 60 * 60) if letsencrypt_force_renew else (90 * 24 * 60 * 60) / 3 }}"
# User that runs certbot and generates the certificates
letsencrypt_user: letsencrypt 
letsencrypt_group: "{{ letsencrypt_user }}"
letsencrypt_home_dir: "/opt/letsencrypt"
# output directory for ACME challenges
letsencrypt_webroot_path: "{{ letsencrypt_home_dir }}/htdocs"
# export directory
letsencrypt_export_dir: "/etc/letsencrypt/live/{{letsencrypt_domain}}"
# python virtualenv directory
letsencrypt_virtualenv_dir: "{{ letsencrypt_home_dir }}/simp_le/venv"
# LetsEncrypt account
letsencrypt_account_file: "{{ '/etc/letsencrypt/accounts/simp_le-' + ('staging' if letsencrypt_staging else 'production') + '.json' }}"
# ACME challenge server
letsencrypt_challenge_url: "https://{{ 'acme-staging' if letsencrypt_staging else 'acme-v01' }}.api.letsencrypt.org/directory"
# certbot custom arguments -- see: https://github.com/kuba/simp_le
letsencrypt_args: []
letsencrypt_combined_args: []
# default arguments passed to certbot
letsencrypt_default_args:
  - --email "{{ letsencrypt_email }}"
  - -f account_key.json
  - -f fullchain.pem
  - -f key.pem
  - -f cert.pem
  - -f chain.pem
  #- "-d {{ _letsencrypt_domains | join(' -d ') }}"
  - --default_root "{{ letsencrypt_webroot_path }}"
  - --server "{{ letsencrypt_challenge_url }}"
  - --tos_sha256 "{{ letsencrypt_tos_sha256 }}"
  - --valid_min {{ letsencrypt_expiration_threshold }}
