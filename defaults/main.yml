---
# This is the certificate admins email - make sure to set it to yours!
acme_email: yourmail@example.com
# The domain we're requesting/renewing for
acme_domain: example.com
# LetsEncrypt Terms of Service SHA256
acme_tos_sha256: "6373439b9f29d67a5cd4d18cbc7f264809342dbf21cb2ba2fc7588df987a6221"
# staging mode to create a fake certificate
acme_staging: false
# Always request www. also?
acme_request_www: true
# Print Certbot output
acme_verbose: true
# Pause these services while updating the certificate
acme_pause_services: []
# This is enabled when running tests - DO NOT TOUCH
acme_test: false
# Force Certificate Reneval
acme_force_renew: true
# Certificate expiration threshold in seconds (default is 30 days - 1/3 of total certificate lifecycle)
acme_expiration_threshold: "{{ (90 * 24 * 60 * 60) if acme_force_renew else (90 * 24 * 60 * 60) / 3 }}"
# User that runs certbot and generates the certificates
acme_user: acme 
acme_group: "{{ acme_user }}"
acme_home_dir: "/opt/letsencrypt"
# output directory for ACME challenges
acme_webroot_path: "{{ acme_home_dir }}/htdocs"
# export directory
acme_export_dir: "/etc/letsencrypt/live/{{acme_domain}}"
# python virtualenv directory
acme_virtualenv_dir: "{{ acme_home_dir }}/simp_le/venv"
# LetsEncrypt account
acme_account_file: "{{ '/etc/letsencrypt/accounts/simp_le-' + ('staging' if acme_staging else 'production') + '.json' }}"
# ACME challenge server
acme_challenge_url: "https://{{ 'acme-staging' if acme_staging else 'acme-v01' }}.api.letsencrypt.org/directory"
# simp_le custom arguments -- see: https://github.com/kuba/simp_le
acme_args: []
# default arguments passed to simp_le
acme_default_args:
  - --email "{{ acme_email }}"
  - -f account_key.json
  - -f fullchain.pem
  - -f key.pem
  - -f cert.pem
  - -f chain.pem
  - --default_root "{{ acme_webroot_path }}"
  - --server "{{ acme_challenge_url }}"
  - --tos_sha256 "{{ acme_tos_sha256 }}"
  - --valid_min {{ acme_expiration_threshold | int }}
