---

# dependencies

- name: Dependencies are installed with Aptitude
  apt: 
    name: "{{ item }}"
    state: latest
  with_items: "{{ _letsencrypt_apt_packages }}"
  when: _letsencrypt_apt_packages is defined

- name: Dependencies are installed with Yum
  yum: 
    name: "{{ item }}"
    state: latest
  with_items: "{{ _letsencrypt_rpm_packages }}"
  when: _letsencrypt_rpm_packages is defined


# user and group configuration

- name: letsencrypt_group exists
  group:
    name: "{{ letsencrypt_group }}"
    system: yes
    state: present

- name: letsencrypt_user exists
  user:
    name: "{{ letsencrypt_user }}"
    group: "{{ letsencrypt_group }}"
    system: yes
    home: "{{ letsencrypt_home_dir }}"
    move_home: no
    createhome: yes
    append: yes

- name: letsencrypt_home_dir is writable for letsencrypt_user
  file:
    path: "{{ letsencrypt_home_dir }}"
    state: directory
    mode: 0770


# file system access

- name: letsencrypt user is able to write to output directories
  file:
    path: "{{ item }}"
    state: directory
    recurse: yes
    owner: "{{ letsencrypt_user }}"
  with_items:
    - /var/lib/letsencrypt
    - /var/log/letsencrypt
    - /etc/letsencrypt/live
    - /etc/letsencrypt/accounts

- name: letsencrypt account directory exists and is writable
  file:
    path: "{{ letsencrypt_account_file | dirname }}"
    owner: root
    group: "{{ letsencrypt_group }}"
    mode: 0770
    state: directory

- name: letsencrypt_webroot_path exists and is writable by letsencrypt_user
  file:
    path: "{{ letsencrypt_webroot_path }}"
    state: directory
    owner: "{{ letsencrypt_user }}"
    group: "{{ letsencrypt_group }}"
    mode: 0775
    recurse: yes

- name: webserver systemd service is installed
  template:
    src: "systemd/letsencrypt-simplehttpd.service.j2"
    dest: "/etc/systemd/system/letsencrypt-simplehttpd.service"
    owner: root
    group: root
    mode: 0755
  register: _systemd_service_template
  when: ansible_service_mgr == "systemd"

# Ansible < 2.2 and >= 2.2
- name: systemd daemons are reloaded via systemctl command
  command: systemctl daemon-reload
  when: (ansible_service_mgr == "systemd") and _systemd_service_template.changed

# # Ansible >= 2.2 only
# - name: systemd daemons are reloaded after changing the service
#   systemd:
#     name: letsencrypt-simplehttpd
#     daemon_reload: yes
#     enabled: false
#   when: _systemd_service_template.changed

- name: webserver upstart job is installed
  template:
    src: "upstart/letsencrypt-simplehttpd.conf.j2"
    dest: "/etc/init/letsencrypt-simplehttpd.conf"
    owner: root
    group: root
    mode: 0655
  register: _upstart_service_template
  when: ansible_service_mgr == "upstart"

- name: upstart configuration is reloaded after job was changed
  command: initctl reload-configuration
  when: (ansible_service_mgr == "upstart") and _upstart_service_template.changed

- name: export directory exists
  file:
    path: "{{ letsencrypt_export_dir }}"
    state: directory
    owner: "{{ letsencrypt_user }}"
    group: "root"
    mode: 0775
    recurse: yes
    force: yes


# simp_le client

- name: simp_le client is installed
  git:
    repo: "https://github.com/kuba/simp_le.git"
    dest: "{{ letsencrypt_home_dir }}/simp_le"
    depth: 1
    clone: yes
    update: yes
    force: yes
  become: yes
  become_user: "{{ letsencrypt_user }}"


# virtualenv and python dependencies

- name: Python modules are installed to virtualenv
  pip:
    name: "{{ item }}"
    virtualenv: "{{ letsencrypt_virtualenv_dir }}"
    virtualenv_site_packages: no
  with_items:
    - 'cryptography'
    - 'pyOpenSSL'
    - 'pytz'
    - 'requests'
  become: yes
  become_user: "{{ letsencrypt_user }}"

- name: ACME Python module 0.6 is installed
  pip:
    name: "acme"
    version: "0.6"
    virtualenv: "{{ letsencrypt_virtualenv_dir }}"
    virtualenv_site_packages: no
  become: yes
  become_user: "{{ letsencrypt_user }}"

