---

# dependencies

- name: universe apt source is available on older versions of Ubuntu
  command: apt-add-repository universe
  when: (ansible_distribution == "Ubuntu") and ((ansible_distribution_major_version | int) <= 14)
  register: _universe_sources_added
  changed_when: not ("already enabled" in _universe_sources_added.stdout_lines[0])

- name: apt-caches are updated after enabling universe
  apt:
    update_cache: yes
  when: _universe_sources_added.changed

- name: Dependencies are installed with Aptitude
  apt:
    name: "{{ item }}"
    state: latest
  with_items:
      - ca-certificates
      - git
      - sudo
  when: ansible_pkg_mgr == "apt"

- name: Dependencies are installed with Yum
  yum:
    name: "{{ item }}"
    state: latest
  with_items:
    - ca-certificates
    - git
    - sudo
  when: ansible_pkg_mgr == "yum"

- name: Dependencies are installed on FreeBSD with pkg
  pkgng:
    name: "{{ item }}"
    state: present
  with_items:
    - git-lite
    - sudo
  when: ansible_pkg_mgr == "pkgng"

# user and group configuration

- name: acme_group exists
  group:
    name: "{{ acme_group }}"
    system: yes
    state: present

- name: acme_user exists
  user:
    name: "{{ acme_user }}"
    group: "{{ acme_group }}"
    system: yes
    home: "{{ acme_home_dir }}"
    move_home: no
    createhome: yes
    append: yes

- name: acme_home_dir is writable for acme_user
  file:
    path: "{{ acme_home_dir }}"
    owner: "{{ acme_user }}"
    group: "{{ acme_group }}"
    state: directory
    mode: 0770

# file system access

- name: letsencrypt user is able to write to output directories
  file:
    path: "{{ item }}"
    state: directory
    recurse: yes
    owner: "{{ acme_user }}"
  with_items:
    - /var/lib/letsencrypt
    - /var/log/letsencrypt
    - /etc/letsencrypt/accounts
    - /etc/letsencrypt/live

- name: letsencrypt account directory exists and is writable
  file:
    path: "{{ acme_account_file | dirname }}"
    owner: root
    group: "{{ acme_group }}"
    mode: 0770
    state: directory

- name: acme_webroot_path exists and is writable by acme_user
  file:
    path: "{{ acme_webroot_path }}"
    state: directory
    owner: "{{ acme_user }}"
    group: "{{ acme_group }}"
    mode: 0770
    recurse: yes
    follow: no

- name: acme_webroot_path is readable for others (e.g. a webserver)
  file:
    path: "{{ acme_webroot_path }}/.well-known"
    state: directory
    mode: "o+rx"
    recurse: yes
    follow: no

- name: .well-known/acme-challenge symlink exists
  file:
    src: "{{ acme_webroot_path }}"
    dest: "{{ acme_webroot_path }}/.well-known/acme-challenge"
    owner: "{{ acme_user }}"
    group: "{{ acme_group }}"
    state: "link"

- name: webserver systemd service is installed
  template:
    src: "systemd/acmesimplehttpd.service.j2"
    dest: "/etc/systemd/system/acmesimplehttpd.service"
    owner: root
    group: "{{ _os_root_group }}"
    mode: 0755
  register: _systemd_service_template
  when: ansible_service_mgr == "systemd"

# Ansible < 2.2 and >= 2.2
- name: systemd daemons are reloaded via systemctl command
  command: systemctl daemon-reload
  when: (ansible_service_mgr == "systemd") and _systemd_service_template.changed

# # Ansible >= 2.2 only
# - name: systemd daemons are reloaded after changing the service
#   systemd:
#     name: acmesimplehttpd
#     daemon_reload: yes
#     enabled: false
#   when: _systemd_service_template.changed

- name: webserver upstart job is installed
  template:
    src: "upstart/acmesimplehttpd.conf.j2"
    dest: "/etc/init/acmesimplehttpd.conf"
    owner: root
    group: "{{ _os_root_group }}"
    mode: 0655
  register: _upstart_service_template
  when: ansible_service_mgr == "upstart"

- name: upstart configuration is reloaded after job was changed
  command: initctl reload-configuration
  when: (ansible_service_mgr == "upstart") and _upstart_service_template.changed

- name: webserver init rc.d job is installed
  template:
    src: "rc.d/acmesimplehttpd.j2"
    dest: "/etc/rc.d/acmesimplehttpd"
    owner: root
    group: "{{ _os_root_group }}"
    mode: 0655
  register: _upstart_service_template
  when: ansible_distribution == "FreeBSD"

- name: export directory exists
  file:
    path: "{{ acme_export_dir }}"
    state: directory
    owner: "{{ acme_user }}"
    group: "{{ _os_root_group }}"
    mode: 0775
    recurse: yes
    force: yes
    follow: no

# acme-tiny client

- name: acme-tiny client is installed
  git:
    repo: "https://github.com/diafygi/acme-tiny.git"
    dest: "{{ acme_home_dir }}/acme-tiny"
    depth: 1
    clone: yes
    update: yes
    force: yes
  become: yes
  become_user: "{{ acme_user }}"

- name: acme-tiny client is executable
  file:
    path: "{{ acme_command }}"
    mode: "u+x"

# intermediate certificate

- name: Intermediate Certificate is downloaded
  get_url:
    url: "{{ acme_intermediate_certificate }}"
    dest: "{{ _acme_intermediate_certificate_path }}"
    owner: "{{ acme_user }}"
    group: "{{ acme_group }}"
    mode: "0644"
    force: yes
  become: yes
  become_user: "{{ acme_user }}"
